plugins {
  id 'java'
  
  //these have to be in the main project for now see:
  //https://discuss.gradle.org/t/how-do-i-include-buildscript-block-from-external-gradle-script/7016/2
  id "com.github.kt3k.coveralls" version "2.9.0" 
  id "de.aaschmid.cpd" version "3.1"
  id "org.owasp.dependencycheck" version "5.3.0"
  id "org.ajoberstar.grgit" version "4.0.1"
  id "com.github.spotbugs" version "4.4.4"
  id "com.jfrog.bintray" version "1.8.4"
  id 'info.solidsoft.pitest' version '1.4.7'
}
apply from: 'eclipse.gradle'
apply from: 'bintray.gradle'
apply from: 'code-quality.gradle'
apply from: 'message-bundle.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

project.group = "com.github.jscancella"

if(project.version == "unspecified"){
  String now = new Date().format( 'MMM-dd-yyyy_HH-mm-ss' )
  project.version = "1.0.0-${now}-SNAPSHOT"
}

repositories {
  jcenter()
}

dependencies {
  implementation 'org.slf4j:slf4j-api:1.7.30'
  //because they are exposed in the method call signature these should be API
  api 'com.fasterxml.jackson.core:jackson-core:2.11.2', 
  'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    
  testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2', 
    'org.springframework.boot:spring-boot-starter-logging:2.3.3.RELEASE',
    'org.bouncycastle:bcprov-jdk15on:1.66',
    'org.kamranzafar:jtar:2.3'
}

test { 
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
  }
  reports {
    html.enabled = true
  }
  //testLogging.showStandardStreams = true
}

import org.ajoberstar.grgit.*
task cloneConformanceSuite(){
  group "Verification"
  description "Download the bagit-conformance-suite if it doesn't exist."
  File location = file("${project.projectDir}/bagit-conformance-suite")
  outputs.dir(location)
  
  onlyIf { !location.exists() }
  doLast{
      Grgit.clone(dir: location, 
                  uri: 'https://github.com/libraryofcongress/bagit-conformance-suite.git')
    }
}
